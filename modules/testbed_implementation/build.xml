<project name="testbed" basedir=".">

    <!-- TODO If the directory in modules.checkoutdir does not exist,
         then running the clean target produces an error. Please let ant-scripts
         create directory if non-existent. -->

    <property file="build-${user.name}.properties"/>

    <property file="build.properties"/>


    <target name="clean">
        <delete dir="dist"/>
        <delete dir="${modules.checkoutdir}/logappender"/>
        <delete dir="${modules.checkoutdir}/fedoralib"/>
        <delete dir="${modules.checkoutdir}/webservices"/>
        <subant target="distclean" antfile="build.xml">
            <fileset dir="${modules.checkoutdir}">
                <include name="**/build.xml"/>
            </fileset>
        </subant>
    </target>

    <target name="getSubversionRevision">
        <exec executable="svn" output="build/svn.properties">
            <arg value="info"/>
        </exec>
        <property prefix="svn" file="build/svn.properties"/>
        <echo>Testbed revision: ${svn.Revision}</echo>
    </target>

    <target name="getDomsServices" depends="getSubversionRevision">
        <!-- Checkout the SourceForge packages needed for building the testbed -->
        <exec executable="bash">
            <arg value="build/create_build_environment.sh"/>
            <arg value="${modules.checkoutdir}"/>
            <arg value="${projects.to.download}"/>
            <arg value="${svn.Revision}"/>
        </exec>
    </target>


    <target name="buildDomsServices"> <!--depends="getDomsServices">-->
        <!--Call the ant file in each of the checkouted services in the ${modules.checkoutdir}-->
        <subant target="release.bin" antfile="build.xml">
            <dirset dir="${modules.checkoutdir}"
                    includesfile="${projects.to.download}"/>
        </subant>
    </target>

    <target name="release" depends="getDomsServices, clean, buildDomsServices">
        <mkdir dir="dist"/>
        <!--Package the webservices-->
        <unzip dest="${modules.checkoutdir}/webservices">
            <fileset dir="${modules.checkoutdir}">
                <include name="**/dist/*.zip"/>
                <exclude name="**/modules/**"/>
                <exclude name="**/lib/**"/>

            </fileset>
            <fileset dir="${newestReleases.dir}" erroronmissingdir="false"
                     includes="*.zip"/>
            <patternset includes="**/*.war"/>
            
            <flattenmapper/>

        </unzip>

        <!--Use the sbutils and log surveillance package from domsutil for fedora-->
        <unzip dest="${modules.checkoutdir}/fedoralib">
            <fileset dir="${modules.checkoutdir}"
                     includes="domsutil/**/dist/domsutil-*.zip">
                <exclude name="**/modules/**"/>
                <exclude name="**/lib/**"/>
            </fileset>
            <fileset dir="${newestReleases.dir}" erroronmissingdir="false"
                     includes="domsutil-*.zip"/>
            <patternset includes="domsutil-*/jars/sbutil*.jar"/>
            <patternset includes="domsutil-*/jars/webservice-common*.jar"/>
            <patternset
                    includes="domsutil-*/jars/surveillance-logappender*.jar"/>
            <patternset includes="domsutil-*/jars/surveyable*.jar"/>
            <flattenmapper/>
        </unzip>


        <!--Use the authchecker package for fedora-->
        <mkdir dir="${modules.checkoutdir}/authCheckertemp"/>
        <unzip dest="${modules.checkoutdir}/authCheckertemp">
            <fileset dir="${modules.checkoutdir}"
                     includes="authChecker/**/dist/authChecker-*.zip">
                <exclude name="**/modules/**"/>
                <exclude name="**/lib/**"/>
            </fileset>
            <fileset dir="${newestReleases.dir}" erroronmissingdir="false"
                     includes="authChecker-*.zip"/>
            <patternset
                    includes="authChecker-*/packages/fedoralogin-*-bin.zip"/>
            <flattenmapper/>
        </unzip>
        <unzip dest="${modules.checkoutdir}/fedoralib">

            <fileset dir="${modules.checkoutdir}/authCheckertemp"
                     includes="fedoralogin-*-bin.zip"/>
            <patternset includes="lib/*.jar"/>
            <flattenmapper/>
        </unzip>
        <delete dir="${modules.checkoutdir}/authCheckertemp"/>


        <!--Use the ecm validatorhook for fedora-->
        <unzip dest="${modules.checkoutdir}/fedoralib">
            <fileset dir="${modules.checkoutdir}"
                     includes="ecm/**/dist/ecm-*.zip">
                <exclude name="**/modules/**"/>
                <exclude name="**/lib/**"/>
            </fileset>
            <fileset dir="${newestReleases.dir}" erroronmissingdir="false"
                     includes="ecm-*.zip"/>
            <patternset includes="ecm-*/jars/fedoravalidatorhook-*.jar"/>
            <flattenmapper/>
        </unzip>

        <!--Use the hookapprove and bitstorage interfaces for fedora-->
        <unzip dest="${modules.checkoutdir}/fedoralib">
            <fileset dir="${modules.checkoutdir}"
                     includes="bitstorage/**/dist/bitstorage-*.zip">
                <exclude name="**/modules/**"/>
                <exclude name="**/lib/**"/>
            </fileset>
            <fileset dir="${newestReleases.dir}" erroronmissingdir="false"
                     includes="bitstorage-*.zip"/>
            <patternset includes="bitstorage-*/jars/hookApprove-*.jar"/>
            <patternset includes="bitstorage-*/jars/highlevel_interface-*.jar"/>
            <flattenmapper/>
        </unzip>

        <zip destfile="dist/${release}.zip">
            <zipfileset prefix="${release}" dir="${basedir}">
                <include name="docs/**"/>
                <include name="data/**"/>
            </zipfileset>
            <zipfileset prefix="${release}/versions" dir="${basedir}">
                <include name="projects-to-download.txt"/>
                <include name="build/svn.properties"/>
                <include name="Changelog"/>
            </zipfileset>
            <zipfileset prefix="${release}" dir="${basedir}" filemode="755">
                <include name="bin/**"/>
            </zipfileset>
            <zipfileset prefix="${release}/webservices"
                        dir="${modules.checkoutdir}/webservices">
                <include name="*.war"/>
            </zipfileset>
            <!--
                        <zipfileset prefix="${release}/logappender"
                                    dir="${modules.checkoutdir}/logappender">
                            <include name="*.jar"/>
                        </zipfileset>
            -->
            <zipfileset prefix="${release}/fedoralib"
                        dir="${modules.checkoutdir}/fedoralib">
                <include name="*.jar"/>
            </zipfileset>
        </zip>
    </target>

</project>
